
services:
  frontend:
    build:
      context: ./src
      dockerfile: Dockerfile-flask
      target: test
      tags:
        - "thomastwyman557/python-web-demo-frontend"
    ports:
      - 80:5000
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./src/static
          target: /app/static
        - action: sync
          path: ./src/templates
          target: /app/templates
        - action: rebuild
          path: ./src/requirements.txt

  db:
    build:
      context: ./src
      dockerfile: Dockerfile-postgres
      target: test
      tags:
        - "thomastwyman557/python-web-demo-db"
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "inventorydbuser", "-d", "inventorydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    build:
      context: .
      dockerfile_inline: |
        FROM adminer:latest
      tags:
        - "thomastwyman557/adminer"
    restart: always
    ports:
      - 8081:8080

volumes:
  db-data:

